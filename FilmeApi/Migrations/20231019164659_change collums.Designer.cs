// <auto-generated />
using System;
using FilmeApi.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace FilmeApi.Migrations
{
    [DbContext(typeof(FilmeContext))]
    [Migration("20231019164659_change collums")]
    partial class changecollums
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.12")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("FilmeApi.Models.Cinema", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<int>("enderecoId")
                        .HasColumnType("integer");

                    b.Property<string>("nome")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.HasIndex("enderecoId")
                        .IsUnique();

                    b.ToTable("cinemas");
                });

            modelBuilder.Entity("FilmeApi.Models.Endereco", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<string>("lougradouro")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("numero")
                        .HasColumnType("integer");

                    b.HasKey("id");

                    b.ToTable("enderecos");
                });

            modelBuilder.Entity("FilmeApi.Models.Filme", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<int>("duracao")
                        .HasColumnType("integer");

                    b.Property<string>("genero")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("titulo")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.HasKey("id");

                    b.ToTable("filmes");
                });

            modelBuilder.Entity("FilmeApi.Models.Sessao", b =>
                {
                    b.Property<int?>("filmeId")
                        .HasColumnType("integer");

                    b.Property<int?>("cinemaId")
                        .HasColumnType("integer");

                    b.HasKey("filmeId", "cinemaId");

                    b.HasIndex("cinemaId");

                    b.ToTable("sessoes");
                });

            modelBuilder.Entity("FilmeApi.Models.Cinema", b =>
                {
                    b.HasOne("FilmeApi.Models.Endereco", "endereco")
                        .WithOne("cinema")
                        .HasForeignKey("FilmeApi.Models.Cinema", "enderecoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("endereco");
                });

            modelBuilder.Entity("FilmeApi.Models.Sessao", b =>
                {
                    b.HasOne("FilmeApi.Models.Cinema", "cinema")
                        .WithMany("sessoes")
                        .HasForeignKey("cinemaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FilmeApi.Models.Filme", "filme")
                        .WithMany("Sessoes")
                        .HasForeignKey("filmeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("cinema");

                    b.Navigation("filme");
                });

            modelBuilder.Entity("FilmeApi.Models.Cinema", b =>
                {
                    b.Navigation("sessoes");
                });

            modelBuilder.Entity("FilmeApi.Models.Endereco", b =>
                {
                    b.Navigation("cinema")
                        .IsRequired();
                });

            modelBuilder.Entity("FilmeApi.Models.Filme", b =>
                {
                    b.Navigation("Sessoes");
                });
#pragma warning restore 612, 618
        }
    }
}
